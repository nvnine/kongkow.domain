---
name: "üåÄ Tests"

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    tags-ignore: ['**']
    paths-ignore: ['**.md']
  pull_request:
    paths-ignore: ['**.md']

concurrency:
  group: ${{ github.ref }}-tests
  cancel-in-progress: true

jobs:
  gitleaks:
    name: GitLeaks
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚úÖ GitLeaks check
        uses: DariuszPorowski/github-action-gitleaks@v2
        with:
          report_format: "sarif"
          fail: false

      - name: ‚úÖ Get the output from the gitleaks step
        run: |
          echo "exitcode: ${{ steps.gitleaks.outputs.exitcode }}"
          echo "result: ${{ steps.gitleaks.outputs.result }}"
          echo "output: ${{ steps.gitleaks.outputs.output }}"
          echo "command: ${{ steps.gitleaks.outputs.command }}"
          echo "report: ${{ steps.gitleaks.outputs.report }}"

      - name: ‚úÖ Upload SARIF report
        if: steps.gitleaks.outputs.exitcode == 1
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.gitleaks.outputs.report }}

  check:
    name: DNSControl check
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v3

      - name: ‚úÖ DNSControl check
        uses: koenrh/dnscontrol-action@v3
        with:
          args: check

  validate-schemas:
    name: Validate schemas
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v3

      - name: ‚úÖ Validate JSON
        uses: walbo/validate-json@v1.1.0
        with:
          schema-version: draft-07
          print-valid-files: true
          fail-on-missing-schema: true
          strict: false
          files: ./domains/**/*.json
